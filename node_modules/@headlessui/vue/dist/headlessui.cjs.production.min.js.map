{"version":3,"file":"headlessui.cjs.production.min.js","sources":["../src/utils/render.ts","../src/keyboard.ts","../src/utils/match.ts","../src/hooks/use-id.ts","../src/utils/focus-management.ts","../src/hooks/use-window-event.ts","../src/internal/dom-containers.ts","../src/hooks/use-focus-trap.ts","../src/hooks/use-inert-others.ts","../src/internal/stack-context.ts","../src/internal/portal-force-root.ts","../src/components/portal/portal.ts","../src/components/description/description.ts","../src/utils/dom.ts","../src/internal/open-closed.ts","../src/components/dialog/dialog.ts","../src/components/disclosure/disclosure.ts","../src/utils/calculate-active-index.ts","../src/components/listbox/listbox.ts","../src/components/focus-trap/focus-trap.ts","../src/components/menu/menu.ts","../src/hooks/use-tree-walker.ts","../src/components/popover/popover.ts","../src/components/label/label.ts","../src/components/radio-group/radio-group.ts","../src/components/transitions/utils/transition.ts","../src/components/switch/switch.ts","../src/utils/disposables.ts","../src/utils/once.ts","../src/components/transitions/transition.ts"],"sourcesContent":["import { h, cloneVNode, Slots } from 'vue'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\nexport function render({\n  visible = true,\n  features = Features.None,\n  ...main\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n} & {\n  features?: Features\n  visible?: boolean\n}) {\n  // Visible always render\n  if (visible) return _render(main)\n\n  if (features & Features.Static) {\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (main.props.static) return _render(main)\n  }\n\n  if (features & Features.RenderStrategy) {\n    let strategy = main.props.unmount ?? true ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render({\n          ...main,\n          props: { ...main.props, hidden: true, style: { display: 'none' } },\n        })\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(main)\n}\n\nfunction _render({\n  props,\n  attrs,\n  slots,\n  slot,\n  name,\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n}) {\n  let { as, ...passThroughProps } = omit(props, ['unmount', 'static'])\n\n  let children = slots.default?.(slot)\n\n  if (as === 'template') {\n    if (Object.keys(passThroughProps).length > 0 || Object.keys(attrs).length > 0) {\n      let [firstChild, ...other] = children ?? []\n\n      if (!isValidElement(firstChild) || other.length > 0) {\n        throw new Error(\n          [\n            'Passing props on \"template\"!',\n            '',\n            `The current component <${name} /> is rendering a \"template\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .concat(Object.keys(attrs))\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"template\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneVNode(firstChild, passThroughProps as Record<string, any>)\n    }\n\n    if (Array.isArray(children) && children.length === 1) {\n      return children[0]\n    }\n\n    return children\n  }\n\n  return h(as, passThroughProps, children)\n}\n\nexport function omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n\nfunction isValidElement(input: any): boolean {\n  if (input == null) return false // No children\n  if (typeof input.type === 'string') return true // 'div', 'span', ...\n  if (typeof input.type === 'object') return true // Other components\n  if (typeof input.type === 'function') return true // Built-ins like Transition\n  return false // Comments, strings, ...\n}\n","// TODO: This must already exist somewhere, right? ðŸ¤”\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","let id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  return generateId()\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container) ? container : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","import { onUnmounted } from 'vue'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  window.addEventListener(type, listener, options)\n  onUnmounted(() => window.removeEventListener(type, listener, options))\n}\n","export function contains(containers: Set<HTMLElement>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.contains(element)) return true\n  }\n\n  return false\n}\n","import {\n  onUnmounted,\n  onUpdated,\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\nimport { Keys } from '../keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from '../hooks/use-window-event'\nimport { contains } from '../internal/dom-containers'\n\nexport function useFocusTrap(\n  containers: Ref<Set<HTMLElement>>,\n  enabled: Ref<boolean> = ref(true),\n  options: Ref<{ initialFocus?: HTMLElement | null }> = ref({})\n) {\n  let restoreElement = ref<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = ref<HTMLElement | null>(null)\n\n  function handleFocus() {\n    if (!enabled.value) return\n    if (containers.value.size !== 1) return\n    let { initialFocus } = options.value\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus) {\n      if (initialFocus === activeElement) {\n        return // Initial focus ref is already the active element\n      }\n    } else if (contains(containers.value, activeElement)) {\n      return // Already focused within Dialog\n    }\n\n    restoreElement.value = activeElement\n\n    // Try to focus the initialFocus ref\n    if (initialFocus) {\n      focusElement(initialFocus)\n    } else {\n      let couldFocus = false\n      for (let container of containers.value) {\n        let result = focusIn(container, Focus.First)\n        if (result === FocusResult.Success) {\n          couldFocus = true\n          break\n        }\n      }\n\n      if (!couldFocus) throw new Error('There are no focusable elements inside the <FocusTrap />')\n    }\n\n    previousActiveElement.value = document.activeElement as HTMLElement\n  }\n\n  // Restore when `enabled` becomes false\n  function restore() {\n    focusElement(restoreElement.value)\n    restoreElement.value = null\n    previousActiveElement.value = null\n  }\n\n  // Handle initial focus\n  watchEffect(handleFocus)\n\n  onUpdated(() => {\n    enabled.value ? handleFocus() : restore()\n  })\n  onUnmounted(restore)\n\n  // Handle Tab & Shift+Tab keyboard events\n  useWindowEvent('keydown', event => {\n    if (!enabled.value) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (containers.value.size !== 1) return\n\n    event.preventDefault()\n\n    for (let element of containers.value) {\n      let result = focusIn(\n        element,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      )\n\n      if (result === FocusResult.Success) {\n        previousActiveElement.value = document.activeElement as HTMLElement\n        break\n      }\n    }\n  })\n\n  // Prevent programmatically escaping\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!enabled.value) return\n      if (containers.value.size !== 1) return\n\n      let previous = previousActiveElement.value\n      if (!previous) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(containers.value, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.value = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.value)\n      }\n    },\n    true\n  )\n}\n","import {\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\n// TODO: Figure out a nice way to attachTo document.body in the tests without automagically inserting a div with data-v-app\nlet CHILDREN_SELECTOR = process.env.NODE_ENV === 'test' ? '[data-v-app=\"\"] > *' : 'body > *'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: Ref<TElement | null>,\n  enabled: Ref<boolean> = ref(true)\n) {\n  watchEffect(onInvalidate => {\n    if (!enabled.value) return\n    if (!container.value) return\n\n    let element = container.value\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    onInvalidate(() => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    })\n  })\n}\n","import {\n  inject,\n  provide,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\ntype OnUpdate = (message: StackMessage, element: HTMLElement) => void\n\nlet StackContext = Symbol('StackContext') as InjectionKey<OnUpdate>\n\nexport enum StackMessage {\n  AddElement,\n  RemoveElement,\n}\n\nexport function useStackContext() {\n  return inject(StackContext, () => {})\n}\n\nexport function useElemenStack(element: Ref<HTMLElement | null> | null) {\n  let notify = useStackContext()\n\n  watchEffect(onInvalidate => {\n    let domElement = element?.value\n    if (!domElement) return\n\n    notify(StackMessage.AddElement, domElement)\n    onInvalidate(() => notify(StackMessage.RemoveElement, domElement!))\n  })\n}\n\nexport function useStackProvider(onUpdate?: OnUpdate) {\n  let parentUpdate = useStackContext()\n\n  function notify(...args: Parameters<OnUpdate>) {\n    // Notify our layer\n    onUpdate?.(...args)\n\n    // Notify the parent\n    parentUpdate(...args)\n  }\n\n  provide(StackContext, notify)\n}\n","import {\n  defineComponent,\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n} from 'vue'\nimport { render } from '../utils/render'\n\nlet ForcePortalRootContext = Symbol('ForcePortalRootContext') as InjectionKey<Boolean>\n\nexport function usePortalRoot() {\n  return inject(ForcePortalRootContext, false)\n}\n\nexport let ForcePortalRoot = defineComponent({\n  name: 'ForcePortalRoot',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    force: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    provide(ForcePortalRootContext, props.force)\n\n    return () => {\n      let { force, ...passThroughProps } = props\n      return render({ props: passThroughProps, slot: {}, slots, attrs, name: 'ForcePortalRoot' })\n    }\n  },\n})\n","import {\n  Teleport,\n  defineComponent,\n  h,\n  inject,\n  onUnmounted,\n  provide,\n  reactive,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useElemenStack, useStackProvider } from '../../internal/stack-context'\nimport { usePortalRoot } from '../../internal/portal-force-root'\n\n// ---\n\nfunction getPortalRoot() {\n  let existingRoot = document.getElementById('headlessui-portal-root')\n  if (existingRoot) return existingRoot\n\n  let root = document.createElement('div')\n  root.setAttribute('id', 'headlessui-portal-root')\n  return document.body.appendChild(root)\n}\n\nexport let Portal = defineComponent({\n  name: 'Portal',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let forcePortalRoot = usePortalRoot()\n    let groupContext = inject(PortalGroupContext, null)\n    let myTarget = ref(\n      forcePortalRoot === true\n        ? getPortalRoot()\n        : groupContext === null\n        ? getPortalRoot()\n        : groupContext.resolveTarget()\n    )\n\n    watchEffect(() => {\n      if (forcePortalRoot) return\n      if (groupContext === null) return\n      myTarget.value = groupContext.resolveTarget()\n    })\n\n    let element = ref(null)\n    useElemenStack(element)\n\n    onUnmounted(() => {\n      let root = document.getElementById('headlessui-portal-root')\n      if (!root) return\n      if (myTarget.value !== root) return\n\n      if (myTarget.value.children.length <= 0) {\n        myTarget.value.parentElement?.removeChild(myTarget.value)\n      }\n    })\n\n    useStackProvider()\n\n    return () => {\n      if (myTarget.value === null) return null\n\n      let propsWeControl = {\n        ref: element,\n      }\n\n      return h(\n        // @ts-expect-error Children can be an object, but TypeScript is not happy\n        // with it. Once this is fixed upstream we can remove this assertion.\n        Teleport,\n        { to: myTarget.value },\n        render({\n          props: { ...props, ...propsWeControl },\n          slot: {},\n          attrs,\n          slots,\n          name: 'Portal',\n        })\n      )\n    }\n  },\n})\n\n// ---\n\nlet PortalGroupContext = Symbol('PortalGroupContext') as InjectionKey<{\n  resolveTarget(): HTMLElement | null\n}>\n\nexport let PortalGroup = defineComponent({\n  name: 'PortalGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    target: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  setup(props, { attrs, slots }) {\n    let api = reactive({\n      resolveTarget() {\n        return props.target\n      },\n    })\n\n    provide(PortalGroupContext, api)\n\n    return () => {\n      let { target: _, ...passThroughProps } = props\n\n      return render({ props: passThroughProps, slot: {}, attrs, slots, name: 'PortalGroup' })\n    }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet DescriptionContext = Symbol('DescriptionContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Ref<Record<string, any>>\n  name: string\n  props: Record<string, any>\n}>\n\nfunction useDescriptionContext() {\n  let context = inject(DescriptionContext, null)\n  if (context === null) {\n    throw new Error('Missing parent')\n  }\n  return context\n}\n\nexport function useDescriptions({\n  slot = ref({}),\n  name = 'Description',\n  props = {},\n}: {\n  slot?: Ref<Record<string, unknown>>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let descriptionIds = ref<string[]>([])\n\n  function register(value: string) {\n    descriptionIds.value.push(value)\n\n    return () => {\n      let idx = descriptionIds.value.indexOf(value)\n      if (idx === -1) return\n      descriptionIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(DescriptionContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() =>\n    descriptionIds.value.length > 0 ? descriptionIds.value.join(' ') : undefined\n  )\n}\n\n// ---\n\nexport let Description = defineComponent({\n  name: 'Description',\n  props: {\n    as: { type: [Object, String], default: 'p' },\n  },\n  render() {\n    let { name = 'Description', slot = ref({}), props = {} } = this.context\n    let passThroughProps = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: slot.value,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useDescriptionContext()\n    let id = `headlessui-description-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n","import { Ref } from 'vue'\n\nexport function dom<T extends HTMLElement>(ref?: Ref<T | null>): T | null {\n  if (ref == null) return null\n  if (ref.value == null) return null\n  return ((ref as Ref<T & { $el: unknown }>).value.$el ?? ref.value) as T | null\n}\n","import {\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nlet Context = Symbol('Context') as InjectionKey<Ref<State>>\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function hasOpenClosed() {\n  return useOpenClosed() !== null\n}\n\nexport function useOpenClosed() {\n  return inject(Context, null)\n}\n\nexport function useOpenClosedProvider(value: Ref<State>) {\n  provide(Context, value)\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  Ref,\n} from 'vue'\n\nimport { render, Features } from '../../utils/render'\nimport { Keys } from '../../keyboard'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { contains } from '../../internal/dom-containers'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { Portal, PortalGroup } from '../portal/portal'\nimport { StackMessage, useStackProvider } from '../../internal/stack-context'\nimport { match } from '../../utils/match'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State } from '../../internal/open-closed'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  dialogState: Ref<DialogStates>\n\n  titleId: Ref<string | null>\n\n  setTitleId(id: string | null): void\n\n  close(): void\n}\n\nlet DialogContext = Symbol('DialogContext') as InjectionKey<StateDefinition>\n\nfunction useDialogContext(component: string) {\n  let context = inject(DialogContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Dialog /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\n// ---\n\nlet Missing = 'DC8F892D-2EBD-447C-A4C8-A03058436FF4'\n\nexport let Dialog = defineComponent({\n  name: 'Dialog',\n  inheritAttrs: false, // Manually handling this\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    open: { type: [Boolean, String], default: Missing },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  emits: ['close'],\n  render() {\n    let propsWeControl = {\n      // Manually passthrough the attributes, because Vue can't automatically pass\n      // it to the underlying div because of all the wrapper components below.\n      ...this.$attrs,\n      ref: 'el',\n      id: this.id,\n      role: 'dialog',\n      'aria-modal': this.dialogState === DialogStates.Open ? true : undefined,\n      'aria-labelledby': this.titleId,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n      onKeydown: this.handleKeyDown,\n    }\n    let { open: _, initialFocus, ...passThroughProps } = this.$props\n\n    let slot = { open: this.dialogState === DialogStates.Open }\n\n    return h(ForcePortalRoot, { force: true }, () =>\n      h(Portal, () =>\n        h(PortalGroup, { target: this.dialogRef }, () =>\n          h(ForcePortalRoot, { force: false }, () =>\n            render({\n              props: { ...passThroughProps, ...propsWeControl },\n              slot,\n              attrs: this.$attrs,\n              slots: this.$slots,\n              visible: this.visible,\n              features: Features.RenderStrategy | Features.Static,\n              name: 'Dialog',\n            })\n          )\n        )\n      )\n    )\n  },\n  setup(props, { emit }) {\n    let containers = ref<Set<HTMLElement>>(new Set())\n\n    let usesOpenClosedState = useOpenClosed()\n    let open = computed(() => {\n      if (props.open === Missing && usesOpenClosedState !== null) {\n        // Update the `open` prop based on the open closed state\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n      return props.open\n    })\n\n    // Validations\n    let hasOpen = props.open !== Missing || usesOpenClosedState !== null\n\n    if (!hasOpen) {\n      throw new Error(`You forgot to provide an \\`open\\` prop to the \\`Dialog\\`.`)\n    }\n\n    if (typeof open.value !== 'boolean') {\n      throw new Error(\n        `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${\n          open.value === Missing ? undefined : props.open\n        }`\n      )\n    }\n\n    let dialogState = computed(() => (props.open ? DialogStates.Open : DialogStates.Closed))\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return dialogState.value === DialogStates.Open\n    })\n    let internalDialogRef = ref<HTMLDivElement | null>(null)\n    let enabled = ref(dialogState.value === DialogStates.Open)\n\n    onUpdated(() => {\n      enabled.value = dialogState.value === DialogStates.Open\n    })\n\n    let id = `headlessui-dialog-${useId()}`\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    useFocusTrap(containers, enabled, focusTrapOptions)\n    useInertOthers(internalDialogRef, enabled)\n    useStackProvider((message, element) => {\n      return match(message, {\n        [StackMessage.AddElement]() {\n          containers.value.add(element)\n        },\n        [StackMessage.RemoveElement]() {\n          containers.value.delete(element)\n        },\n      })\n    })\n\n    let describedby = useDescriptions({\n      name: 'DialogDescription',\n      slot: computed(() => ({ open: open.value })),\n    })\n\n    let titleId = ref<StateDefinition['titleId']['value']>(null)\n\n    let api = {\n      titleId,\n      dialogState,\n      setTitleId(id: string | null) {\n        if (titleId.value === id) return\n        titleId.value = id\n      },\n      close() {\n        emit('close', false)\n      },\n    }\n\n    provide(DialogContext, api)\n\n    // Handle outside click\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size !== 1) return\n      if (contains(containers.value, target)) return\n\n      api.close()\n      nextTick(() => target?.focus())\n    })\n\n    // Scroll lock\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n\n      let overflow = document.documentElement.style.overflow\n      let paddingRight = document.documentElement.style.paddingRight\n\n      let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n      document.documentElement.style.overflow = 'hidden'\n      document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n      onInvalidate(() => {\n        document.documentElement.style.overflow = overflow\n        document.documentElement.style.paddingRight = paddingRight\n      })\n    })\n\n    // Trigger close when the FocusTrap gets hidden\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n      let container = dom(internalDialogRef)\n      if (!container) return\n\n      let observer = new IntersectionObserver(entries => {\n        for (let entry of entries) {\n          if (\n            entry.boundingClientRect.x === 0 &&\n            entry.boundingClientRect.y === 0 &&\n            entry.boundingClientRect.width === 0 &&\n            entry.boundingClientRect.height === 0\n          ) {\n            api.close()\n          }\n        }\n      })\n\n      observer.observe(container)\n\n      onInvalidate(() => observer.disconnect())\n    })\n\n    return {\n      id,\n      el: internalDialogRef,\n      dialogRef: internalDialogRef,\n      containers,\n      dialogState,\n      titleId,\n      describedby,\n      visible,\n      open,\n      handleClick(event: MouseEvent) {\n        event.stopPropagation()\n      },\n\n      // Handle `Escape` to close\n      handleKeyDown(event: KeyboardEvent) {\n        if (event.key !== Keys.Escape) return\n        if (dialogState.value !== DialogStates.Open) return\n        if (containers.value.size > 1) return // 1 is myself, otherwise other elements in the Stack\n        event.preventDefault()\n        event.stopPropagation()\n        api.close()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogOverlay = defineComponent({\n  name: 'DialogOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let api = useDialogContext('DialogOverlay')\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogOverlay',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogOverlay')\n    let id = `headlessui-dialog-overlay-${useId()}`\n\n    return {\n      id,\n      handleClick(event: MouseEvent) {\n        event.preventDefault()\n        event.stopPropagation()\n        api.close()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogTitle = defineComponent({\n  name: 'DialogTitle',\n  props: {\n    as: { type: [Object, String], default: 'h2' },\n  },\n  render() {\n    let api = useDialogContext('DialogTitle')\n    let propsWeControl = { id: this.id }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogTitle',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogTitle')\n    let id = `headlessui-dialog-title-${useId()}`\n\n    onMounted(() => {\n      api.setTitleId(id)\n      onUnmounted(() => api.setTitleId(null))\n    })\n\n    return { id }\n  },\n})\n\n// ---\n\nexport let DialogDescription = Description\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport { defineComponent, ref, provide, inject, InjectionKey, Ref, computed } from 'vue'\n\nimport { Keys } from '../../keyboard'\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  disclosureState: Ref<DisclosureStates>\n  panelRef: Ref<HTMLElement | null>\n\n  // State mutators\n  toggleDisclosure(): void\n}\n\nlet DisclosureContext = Symbol('DisclosureContext') as InjectionKey<StateDefinition>\n\nfunction useDisclosureContext(component: string) {\n  let context = inject(DisclosureContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Disclosure = defineComponent({\n  name: 'Disclosure',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    defaultOpen: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let disclosureState = ref<StateDefinition['disclosureState']['value']>(\n      props.defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed\n    )\n    let panelRef = ref<StateDefinition['panelRef']['value']>(null)\n\n    let api = {\n      disclosureState,\n      panelRef,\n      toggleDisclosure() {\n        disclosureState.value = match(disclosureState.value, {\n          [DisclosureStates.Open]: DisclosureStates.Closed,\n          [DisclosureStates.Closed]: DisclosureStates.Open,\n        })\n      },\n    } as StateDefinition\n\n    provide(DisclosureContext, api)\n    useOpenClosedProvider(\n      computed(() => {\n        return match(disclosureState.value, {\n          [DisclosureStates.Open]: State.Open,\n          [DisclosureStates.Closed]: State.Closed,\n        })\n      })\n    )\n\n    return () => {\n      let { defaultOpen: _, ...passThroughProps } = props\n      let slot = { open: disclosureState.value === DisclosureStates.Open }\n      return render({ props: passThroughProps, slot, slots, attrs, name: 'Disclosure' })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosureButton = defineComponent({\n  name: 'DisclosureButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n    let propsWeControl = {\n      id: this.id,\n      type: 'button',\n      'aria-expanded': this.$props.disabled\n        ? undefined\n        : api.disclosureState.value === DisclosureStates.Open,\n      'aria-controls': this.ariaControls,\n      disabled: this.$props.disabled ? true : undefined,\n      onClick: this.handleClick,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DisclosureButton',\n    })\n  },\n  setup(props) {\n    let api = useDisclosureContext('DisclosureButton')\n    let buttonId = `headlessui-disclosure-button-${useId()}`\n    let ariaControls = computed(() => dom(api.panelRef)?.id ?? undefined)\n\n    return {\n      id: buttonId,\n      ariaControls,\n      handleClick() {\n        if (props.disabled) return\n        api.toggleDisclosure()\n      },\n      handleKeyDown(event: KeyboardEvent) {\n        if (props.disabled) return\n\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            api.toggleDisclosure()\n            break\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Space:\n            // Required for firefox, event.preventDefault() in handleKeyDown for\n            // the Space key doesn't cancel the handleKeyUp, which in turn\n            // triggers a *click*.\n            event.preventDefault()\n            break\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DisclosurePanel = defineComponent({\n  name: 'DisclosurePanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n    let propsWeControl = { id: this.id, ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'DisclosurePanel',\n    })\n  },\n  setup() {\n    let api = useDisclosureContext('DisclosurePanel')\n    let panelId = `headlessui-disclosure-panel-${useId()}`\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.disclosureState.value === DisclosureStates.Open\n    })\n\n    return { id: panelId, el: api.panelRef, visible }\n  },\n})\n","function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  ComputedRef,\n  watchEffect,\n  toRaw,\n  watch,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, useOpenClosedProvider } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype ListboxOptionDataRef = Ref<{ textValue: string; disabled: boolean; value: unknown }>\ntype StateDefinition = {\n  // State\n  listboxState: Ref<ListboxStates>\n  value: ComputedRef<unknown>\n  labelRef: Ref<HTMLLabelElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ListboxOptionDataRef }[]>\n  searchQuery: Ref<string>\n  activeOptionIndex: Ref<number | null>\n\n  // State mutators\n  closeListbox(): void\n  openListbox(): void\n  goToOption(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerOption(id: string, dataRef: ListboxOptionDataRef): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ListboxContext = Symbol('ListboxContext') as InjectionKey<StateDefinition>\n\nfunction useListboxContext(component: string) {\n  let context = inject(ListboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Listbox = defineComponent({\n  name: 'Listbox',\n  emits: ['update:modelValue'],\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let listboxState = ref<StateDefinition['listboxState']['value']>(ListboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      listboxState,\n      value,\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled: computed(() => props.disabled),\n      options,\n      searchQuery,\n      activeOptionIndex,\n      closeListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        listboxState.value = ListboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Open) return\n        listboxState.value = ListboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => options.value,\n            resolveActiveIndex: () => activeOptionIndex.value,\n            resolveId: option => option.id,\n            resolveDisabled: option => option.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeOptionIndex.value === nextActiveOptionIndex) return\n        searchQuery.value = ''\n        activeOptionIndex.value = nextActiveOptionIndex\n      },\n      search(value: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        searchQuery.value += value.toLowerCase()\n\n        let match = options.value.findIndex(\n          option =>\n            !option.dataRef.disabled && option.dataRef.textValue.startsWith(searchQuery.value)\n        )\n\n        if (match === -1 || match === activeOptionIndex.value) return\n        activeOptionIndex.value = match\n      },\n      clearSearch() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        if (searchQuery.value === '') return\n\n        searchQuery.value = ''\n      },\n      registerOption(id: string, dataRef: ListboxOptionDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        options.value.push({ id, dataRef })\n      },\n      unregisterOption(id: string) {\n        let nextOptions = options.value.slice()\n        let currentActiveOption =\n          activeOptionIndex.value !== null ? nextOptions[activeOptionIndex.value] : null\n        let idx = nextOptions.findIndex(a => a.id === id)\n        if (idx !== -1) nextOptions.splice(idx, 1)\n        options.value = nextOptions\n        activeOptionIndex.value = (() => {\n          if (idx === activeOptionIndex.value) return null\n          if (currentActiveOption === null) return null\n\n          // If we removed the option before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextOptions.indexOf(currentActiveOption)\n        })()\n      },\n      select(value: unknown) {\n        if (props.disabled) return\n        emit('update:modelValue', value)\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (listboxState.value !== ListboxStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(optionsRef)?.contains(target)) api.closeListbox()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ListboxContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(listboxState.value, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: listboxState.value === ListboxStates.Open, disabled: props.disabled }\n      return render({\n        props: omit(props, ['modelValue', 'onUpdate:modelValue', 'disabled']),\n        slot,\n        slots,\n        attrs,\n        name: 'Listbox',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxLabel = defineComponent({\n  name: 'ListboxLabel',\n  props: { as: { type: [Object, String], default: 'label' } },\n  render() {\n    let api = useListboxContext('ListboxLabel')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled.value }\n    let propsWeControl = { id: this.id, ref: 'el', onClick: this.handleClick }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxLabel',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxLabel')\n    let id = `headlessui-listbox-label-${useId()}`\n\n    return {\n      id,\n      el: api.labelRef,\n      handleClick() {\n        dom(api.buttonRef)?.focus({ preventScroll: true })\n      },\n    }\n  },\n})\n\n// ---\n\nexport let ListboxButton = defineComponent({\n  name: 'ListboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useListboxContext('ListboxButton')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled.value }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: 'button',\n      'aria-haspopup': true,\n      'aria-controls': dom(api.optionsRef)?.id,\n      'aria-expanded': api.disabled.value\n        ? undefined\n        : api.listboxState.value === ListboxStates.Open,\n      'aria-labelledby': api.labelRef.value\n        ? [dom(api.labelRef)?.id, this.id].join(' ')\n        : undefined,\n      disabled: api.disabled.value === true ? true : undefined,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxButton',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxButton')\n    let id = `headlessui-listbox-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled.value) return\n      if (api.listboxState.value === ListboxStates.Open) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        api.openListbox()\n        nextFrame(() => dom(api.optionsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return { id, el: api.buttonRef, handleKeyDown, handleKeyUp, handleClick }\n  },\n})\n\n// ---\n\nexport let ListboxOptions = defineComponent({\n  name: 'ListboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useListboxContext('ListboxOptions')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeOptionIndex.value === null\n          ? undefined\n          : api.options.value[api.activeOptionIndex.value]?.id,\n      'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      role: 'listbox',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'ListboxOptions',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxOptions')\n    let id = `headlessui-listbox-options-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeOptionIndex.value !== null) {\n            let { dataRef } = api.options.value[api.activeOptionIndex.value]\n            api.select(dataRef.value)\n          }\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.listboxState.value === ListboxStates.Open\n    })\n\n    return { id, el: api.optionsRef, handleKeyDown, visible }\n  },\n})\n\nexport let ListboxOption = defineComponent({\n  name: 'ListboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useListboxContext('ListboxOption')\n    let id = `headlessui-listbox-option-${useId()}`\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === id\n        : false\n    })\n\n    let selected = computed(() => toRaw(api.value.value) === toRaw(props.value))\n\n    let dataRef = ref<ListboxOptionDataRef['value']>({\n      disabled: props.disabled,\n      value: props.value,\n      textValue: '',\n    })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerOption(id, dataRef))\n    onUnmounted(() => api.unregisterOption(id))\n\n    onMounted(() => {\n      watch(\n        [api.listboxState, selected],\n        () => {\n          if (api.listboxState.value !== ListboxStates.Open) return\n          if (!selected.value) return\n          api.goToOption(Focus.Specific, id)\n          document.getElementById(id)?.focus?.()\n        },\n        { immediate: true }\n      )\n    })\n\n    watchEffect(() => {\n      if (api.listboxState.value !== ListboxStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.select(props.value)\n      api.closeListbox()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'option',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        'aria-selected': selected.value === true ? selected.value : undefined,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxOption',\n      })\n    }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  ref,\n\n  // Types\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\n\nexport let FocusTrap = defineComponent({\n  name: 'FocusTrap',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  render() {\n    let slot = {}\n    let propsWeControl = { ref: 'el' }\n    let { initialFocus, ...passThroughProps } = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'FocusTrap',\n    })\n  },\n  setup(props) {\n    let containers = ref(new Set<HTMLElement>())\n    let container = ref<HTMLElement | null>(null)\n    let enabled = ref(true)\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    onMounted(() => {\n      if (!container.value) return\n      containers.value.add(container.value)\n\n      useFocusTrap(containers, enabled, focusTrapOptions)\n    })\n\n    onUnmounted(() => {\n      enabled.value = false\n    })\n\n    return { el: container }\n  },\n})\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  watchEffect,\n} from 'vue'\nimport { Features, render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype MenuItemDataRef = Ref<{ textValue: string; disabled: boolean }>\ntype StateDefinition = {\n  // State\n  menuState: Ref<MenuStates>\n  buttonRef: Ref<HTMLButtonElement | null>\n  itemsRef: Ref<HTMLDivElement | null>\n  items: Ref<{ id: string; dataRef: MenuItemDataRef }[]>\n  searchQuery: Ref<string>\n  activeItemIndex: Ref<number | null>\n\n  // State mutators\n  closeMenu(): void\n  openMenu(): void\n  goToItem(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerItem(id: string, dataRef: MenuItemDataRef): void\n  unregisterItem(id: string): void\n}\n\nlet MenuContext = Symbol('MenuContext') as InjectionKey<StateDefinition>\n\nfunction useMenuContext(component: string) {\n  let context = inject(MenuContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Menu /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n\n  return context\n}\n\nexport let Menu = defineComponent({\n  name: 'Menu',\n  props: { as: { type: [Object, String], default: 'template' } },\n  setup(props, { slots, attrs }) {\n    let menuState = ref<StateDefinition['menuState']['value']>(MenuStates.Closed)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let itemsRef = ref<StateDefinition['itemsRef']['value']>(null)\n    let items = ref<StateDefinition['items']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeItemIndex = ref<StateDefinition['activeItemIndex']['value']>(null)\n\n    let api = {\n      menuState,\n      buttonRef,\n      itemsRef,\n      items,\n      searchQuery,\n      activeItemIndex,\n      closeMenu: () => {\n        menuState.value = MenuStates.Closed\n        activeItemIndex.value = null\n      },\n      openMenu: () => (menuState.value = MenuStates.Open),\n      goToItem(focus: Focus, id?: string) {\n        let nextActiveItemIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => items.value,\n            resolveActiveIndex: () => activeItemIndex.value,\n            resolveId: item => item.id,\n            resolveDisabled: item => item.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeItemIndex.value === nextActiveItemIndex) return\n        searchQuery.value = ''\n        activeItemIndex.value = nextActiveItemIndex\n      },\n      search(value: string) {\n        searchQuery.value += value.toLowerCase()\n\n        let match = items.value.findIndex(\n          item => item.dataRef.textValue.startsWith(searchQuery.value) && !item.dataRef.disabled\n        )\n\n        if (match === -1 || match === activeItemIndex.value) return\n\n        activeItemIndex.value = match\n      },\n      clearSearch() {\n        searchQuery.value = ''\n      },\n      registerItem(id: string, dataRef: MenuItemDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        items.value.push({ id, dataRef })\n      },\n      unregisterItem(id: string) {\n        let nextItems = items.value.slice()\n        let currentActiveItem =\n          activeItemIndex.value !== null ? nextItems[activeItemIndex.value] : null\n        let idx = nextItems.findIndex(a => a.id === id)\n        if (idx !== -1) nextItems.splice(idx, 1)\n        items.value = nextItems\n        activeItemIndex.value = (() => {\n          if (idx === activeItemIndex.value) return null\n          if (currentActiveItem === null) return null\n\n          // If we removed the item before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextItems.indexOf(currentActiveItem)\n        })()\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (menuState.value !== MenuStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(itemsRef)?.contains(target)) api.closeMenu()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(MenuContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(menuState.value, {\n          [MenuStates.Open]: State.Open,\n          [MenuStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: menuState.value === MenuStates.Open }\n      return render({ props, slot, slots, attrs, name: 'Menu' })\n    }\n  },\n})\n\nexport let MenuButton = defineComponent({\n  name: 'MenuButton',\n  props: {\n    disabled: { type: Boolean, default: false },\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useMenuContext('MenuButton')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: 'button',\n      'aria-haspopup': true,\n      'aria-controls': dom(api.itemsRef)?.id,\n      'aria-expanded': this.$props.disabled ? undefined : api.menuState.value === MenuStates.Open,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'MenuButton',\n    })\n  },\n  setup(props) {\n    let api = useMenuContext('MenuButton')\n    let id = `headlessui-menu-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (api.menuState.value === MenuStates.Open) {\n        api.closeMenu()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        api.openMenu()\n        nextFrame(() => dom(api.itemsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return { id, el: api.buttonRef, handleKeyDown, handleKeyUp, handleClick }\n  },\n})\n\nexport let MenuItems = defineComponent({\n  name: 'MenuItems',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useMenuContext('MenuItems')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeItemIndex.value === null\n          ? undefined\n          : api.items.value[api.activeItemIndex.value]?.id,\n      'aria-labelledby': dom(api.buttonRef)?.id,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      role: 'menu',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'MenuItems',\n    })\n  },\n  setup() {\n    let api = useMenuContext('MenuItems')\n    let id = `headlessui-menu-items-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    useTreeWalker({\n      container: computed(() => dom(api.itemsRef)),\n      enabled: computed(() => api.menuState.value === MenuStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeItemIndex.value !== null) {\n            let { id } = api.items.value[api.activeItemIndex.value]\n            document.getElementById(id)?.click()\n          }\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.menuState.value === MenuStates.Open\n    })\n\n    return { id, el: api.itemsRef, handleKeyDown, handleKeyUp, visible }\n  },\n})\n\nexport let MenuItem = defineComponent({\n  name: 'MenuItem',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useMenuContext('MenuItem')\n    let id = `headlessui-menu-item-${useId()}`\n\n    let active = computed(() => {\n      return api.activeItemIndex.value !== null\n        ? api.items.value[api.activeItemIndex.value].id === id\n        : false\n    })\n\n    let dataRef = ref<MenuItemDataRef['value']>({ disabled: props.disabled, textValue: '' })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerItem(id, dataRef))\n    onUnmounted(() => api.unregisterItem(id))\n\n    watchEffect(() => {\n      if (api.menuState.value !== MenuStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.closeMenu()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToItem(Focus.Nothing)\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToItem(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'menuitem',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'MenuItem',\n      })\n    }\n  },\n})\n","import { watchEffect, ComputedRef } from 'vue'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled,\n}: {\n  container: ComputedRef<HTMLElement | null>\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: ComputedRef<boolean>\n}) {\n  watchEffect(() => {\n    let root = container.value\n    if (!root) return\n    if (enabled !== undefined && !enabled.value) return\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  })\n}\n","import {\n  defineComponent,\n  inject,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  popoverState: Ref<PopoverStates>\n  button: Ref<HTMLElement | null>\n  buttonId: string\n  panel: Ref<HTMLElement | null>\n  panelId: string\n\n  // State mutators\n  togglePopover(): void\n  closePopover(): void\n}\n\nlet PopoverContext = Symbol('PopoverContext') as InjectionKey<StateDefinition>\nfunction usePopoverContext(component: string) {\n  let context = inject(PopoverContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = Symbol('PopoverGroupContext') as InjectionKey<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>\n\nfunction usePopoverGroupContext() {\n  return inject(PopoverGroupContext, null)\n}\n\nlet PopoverPanelContext = Symbol('PopoverPanelContext') as InjectionKey<string | null>\nfunction usePopoverPanelContext() {\n  return inject(PopoverPanelContext, null)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\n\n// ---\n\nexport let Popover = defineComponent({\n  name: 'Popover',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let buttonId = `headlessui-popover-button-${useId()}`\n    let panelId = `headlessui-popover-panel-${useId()}`\n\n    let popoverState = ref<StateDefinition['popoverState']['value']>(PopoverStates.Closed)\n    let button = ref<StateDefinition['button']['value']>(null)\n    let panel = ref<StateDefinition['panel']['value']>(null)\n\n    let api = {\n      popoverState,\n      buttonId,\n      panelId,\n      panel,\n      button,\n      togglePopover() {\n        popoverState.value = match(popoverState.value, {\n          [PopoverStates.Open]: PopoverStates.Closed,\n          [PopoverStates.Closed]: PopoverStates.Open,\n        })\n      },\n      closePopover() {\n        if (popoverState.value === PopoverStates.Closed) return\n        popoverState.value = PopoverStates.Closed\n      },\n    } as StateDefinition\n\n    provide(PopoverContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(popoverState.value, {\n          [PopoverStates.Open]: State.Open,\n          [PopoverStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let registerBag = {\n      buttonId,\n      panelId,\n      close() {\n        api.closePopover()\n      },\n    }\n\n    let groupContext = usePopoverGroupContext()\n    let registerPopover = groupContext?.registerPopover\n\n    function isFocusWithinPopoverGroup() {\n      return (\n        groupContext?.isFocusWithinPopoverGroup() ??\n        (dom(button)?.contains(document.activeElement) ||\n          dom(panel)?.contains(document.activeElement))\n      )\n    }\n\n    watchEffect(() => registerPopover?.(registerBag))\n\n    // Handle focus out\n    useWindowEvent(\n      'focus',\n      () => {\n        if (popoverState.value !== PopoverStates.Open) return\n        if (isFocusWithinPopoverGroup()) return\n        if (!button) return\n        if (!panel) return\n\n        api.closePopover()\n      },\n      true\n    )\n\n    // Handle outside click\n    useWindowEvent('mousedown', (event: MouseEvent) => {\n      let target = event.target as HTMLElement\n\n      if (popoverState.value !== PopoverStates.Open) return\n\n      if (dom(button)?.contains(target)) return\n      if (dom(panel)?.contains(target)) return\n\n      api.closePopover()\n\n      if (!isFocusableElement(target, FocusableMode.Loose)) {\n        event.preventDefault()\n        dom(button)?.focus()\n      }\n    })\n\n    return () => {\n      let slot = { open: popoverState.value === PopoverStates.Open }\n      return render({ props, slot, slots, attrs, name: 'Popover' })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverButton = defineComponent({\n  name: 'PopoverButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverButton')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = this.isWithinPanel\n      ? {\n          type: 'button',\n          onKeydown: this.handleKeyDown,\n          onClick: this.handleClick,\n        }\n      : {\n          ref: 'el',\n          id: api.buttonId,\n          type: 'button',\n          'aria-expanded': this.$props.disabled\n            ? undefined\n            : api.popoverState.value === PopoverStates.Open,\n          'aria-controls': dom(api.panel) ? api.panelId : undefined,\n          disabled: this.$props.disabled ? true : undefined,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp,\n          onClick: this.handleClick,\n        }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverButton',\n    })\n  },\n  setup(props) {\n    let api = usePopoverContext('PopoverButton')\n\n    let groupContext = usePopoverGroupContext()\n    let closeOthers = groupContext?.closeOthers\n\n    let panelContext = usePopoverPanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n    let activeElementRef = ref<Element | null>(null)\n    let previousActiveElementRef = ref<Element | null>(\n      typeof window === 'undefined' ? null : document.activeElement\n    )\n\n    useWindowEvent(\n      'focus',\n      () => {\n        previousActiveElementRef.value = activeElementRef.value\n        activeElementRef.value = document.activeElement\n      },\n      true\n    )\n\n    return {\n      isWithinPanel,\n      el: isWithinPanel ? null : api.button,\n      handleKeyDown(event: KeyboardEvent) {\n        if (isWithinPanel) {\n          if (api.popoverState.value === PopoverStates.Closed) return\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              api.closePopover()\n              dom(api.button)?.focus() // Re-focus the original opening Button\n              break\n          }\n        } else {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n              api.togglePopover()\n              break\n\n            case Keys.Escape:\n              if (api.popoverState.value !== PopoverStates.Open) return closeOthers?.(api.buttonId)\n              if (!dom(api.button)) return\n              if (!dom(api.button)?.contains(document.activeElement)) return\n              api.closePopover()\n              break\n\n            case Keys.Tab:\n              if (api.popoverState.value !== PopoverStates.Open) return\n              if (!api.panel) return\n              if (!api.button) return\n\n              // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n              if (event.shiftKey) {\n                // Check if the last focused element exists, and check that it is not inside button or panel itself\n                if (!previousActiveElementRef.value) return\n                if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n                if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n                // Check if the last focused element is *after* the button in the DOM\n                let focusableElements = getFocusableElements()\n                let previousIdx = focusableElements.indexOf(\n                  previousActiveElementRef.value as HTMLElement\n                )\n                let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n                if (buttonIdx > previousIdx) return\n\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.Last)\n              } else {\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.First)\n              }\n\n              break\n          }\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (isWithinPanel) return\n        if (event.key === Keys.Space) {\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n        }\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!api.panel) return\n        if (!api.button) return\n\n        // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n        switch (event.key) {\n          case Keys.Tab:\n            // Check if the last focused element exists, and check that it is not inside button or panel itself\n            if (!previousActiveElementRef.value) return\n            if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n            if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n            // Check if the last focused element is *after* the button in the DOM\n            let focusableElements = getFocusableElements()\n            let previousIdx = focusableElements.indexOf(\n              previousActiveElementRef.value as HTMLElement\n            )\n            let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n            if (buttonIdx > previousIdx) return\n\n            event.preventDefault()\n            event.stopPropagation()\n            focusIn(dom(api.panel)!, Focus.Last)\n            break\n        }\n      },\n      handleClick() {\n        if (props.disabled) return\n        if (isWithinPanel) {\n          api.closePopover()\n          dom(api.button)?.focus() // Re-focus the original opening Button\n        } else {\n          if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n          dom(api.button)?.focus()\n          api.togglePopover()\n        }\n      },\n      handleFocus() {},\n    }\n  },\n})\n\n// ---\n\nexport let PopoverOverlay = defineComponent({\n  name: 'PopoverOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'PopoverOverlay',\n    })\n  },\n  setup() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    return {\n      id: `headlessui-popover-overlay-${useId()}`,\n      handleClick() {\n        api.closePopover()\n      },\n      visible,\n    }\n  },\n})\n\n// ---\n\nexport let PopoverPanel = defineComponent({\n  name: 'PopoverPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    focus: { type: Boolean, default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverPanel')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'PopoverPanel',\n    })\n  },\n  setup(props) {\n    let { focus } = props\n    let api = usePopoverContext('PopoverPanel')\n\n    provide(PopoverPanelContext, api.panelId)\n\n    onUnmounted(() => {\n      api.panel.value = null\n    })\n\n    // Move focus within panel\n    watchEffect(() => {\n      if (!focus) return\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!api.panel) return\n\n      let activeElement = document.activeElement as HTMLElement\n      if (dom(api.panel)?.contains(activeElement)) return // Already focused within Dialog\n\n      focusIn(dom(api.panel)!, Focus.First)\n    })\n\n    // Handle Tab / Shift+Tab focus positioning\n    useWindowEvent('keydown', (event: KeyboardEvent) => {\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!dom(api.panel)) return\n\n      if (event.key !== Keys.Tab) return\n      if (!document.activeElement) return\n      if (!dom(api.panel)?.contains(document.activeElement)) return\n\n      // We will take-over the default tab behaviour so that we have a bit\n      // control over what is focused next. It will behave exactly the same,\n      // but it will also \"fix\" some issues based on whether you are using a\n      // Portal or not.\n      event.preventDefault()\n\n      let result = focusIn(dom(api.panel)!, event.shiftKey ? Focus.Previous : Focus.Next)\n\n      if (result === FocusResult.Underflow) {\n        return dom(api.button)?.focus()\n      } else if (result === FocusResult.Overflow) {\n        if (!dom(api.button)) return\n\n        let elements = getFocusableElements()\n        let buttonIdx = elements.indexOf(dom(api.button)!)\n\n        let nextElements = elements\n          .splice(buttonIdx + 1) // Elements after button\n          .filter(element => !dom(api.panel)?.contains(element)) // Ignore items in panel\n\n        // Try to focus the next element, however it could fail if we are in a\n        // Portal that happens to be the very last one in the DOM. In that\n        // case we would Error (because nothing after the button is\n        // focusable). Therefore we will try and focus the very first item in\n        // the document.body.\n        if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n          focusIn(document.body, Focus.First)\n        }\n      }\n    })\n\n    // Handle focus out when we are in special \"focus\" mode\n    useWindowEvent(\n      'focus',\n      () => {\n        if (!focus) return\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!dom(api.panel)) return\n        if (dom(api.panel)?.contains(document.activeElement as HTMLElement)) return\n        api.closePopover()\n      },\n      true\n    )\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    return {\n      id: api.panelId,\n      el: api.panel,\n      handleKeyDown(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Escape:\n            if (api.popoverState.value !== PopoverStates.Open) return\n            if (!dom(api.panel)) return\n            if (!dom(api.panel)?.contains(document.activeElement)) return\n            event.preventDefault()\n            api.closePopover()\n            dom(api.button)?.focus()\n            break\n        }\n      },\n      visible,\n    }\n  },\n})\n\n// ---\n\nexport let PopoverGroup = defineComponent({\n  name: 'PopoverGroup',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let propsWeControl = { ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverGroup',\n    })\n  },\n  setup() {\n    let groupRef = ref<HTMLElement | null>(null)\n    let popovers = ref<PopoverRegisterBag[]>([])\n\n    function unregisterPopover(registerBag: PopoverRegisterBag) {\n      let idx = popovers.value.indexOf(registerBag)\n      if (idx !== -1) popovers.value.splice(idx, 1)\n    }\n\n    function registerPopover(registerBag: PopoverRegisterBag) {\n      popovers.value.push(registerBag)\n      return () => {\n        unregisterPopover(registerBag)\n      }\n    }\n\n    function isFocusWithinPopoverGroup() {\n      let element = document.activeElement as HTMLElement\n\n      if (dom(groupRef)?.contains(element)) return true\n\n      // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n      return popovers.value.some(bag => {\n        return (\n          document.getElementById(bag.buttonId)?.contains(element) ||\n          document.getElementById(bag.panelId)?.contains(element)\n        )\n      })\n    }\n\n    function closeOthers(buttonId: string) {\n      for (let popover of popovers.value) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    }\n\n    provide(PopoverGroupContext, {\n      registerPopover,\n      unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    })\n\n    return { el: groupRef }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet LabelContext = Symbol('LabelContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Record<string, unknown>\n  name: string\n  props: Record<string, unknown>\n}>\n\nfunction useLabelContext() {\n  let context = inject(LabelContext, null)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\nexport function useLabels({\n  slot = {},\n  name = 'Label',\n  props = {},\n}: {\n  slot?: Record<string, unknown>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let labelIds = ref<string[]>([])\n  function register(value: string) {\n    labelIds.value.push(value)\n\n    return () => {\n      let idx = labelIds.value.indexOf(value)\n      if (idx === -1) return\n      labelIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(LabelContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() => (labelIds.value.length > 0 ? labelIds.value.join(' ') : undefined))\n}\n\n// ---\n\nexport let Label = defineComponent({\n  name: 'Label',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    passive: { type: [Boolean], default: false },\n  },\n  render() {\n    let { name = 'Label', slot = {}, props = {} } = this.context\n    let { passive, ...passThroughProps } = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n    let allProps = { ...passThroughProps, ...propsWeControl }\n\n    // @ts-expect-error props are dynamic via context, some components will\n    //                  provide an onClick then we can delete it.\n    if (passive) delete allProps['onClick']\n\n    return render({\n      props: allProps,\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useLabelContext()\n    let id = `headlessui-label-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n\n  // Types\n  InjectionKey,\n  Ref,\n  UnwrapRef,\n} from 'vue'\nimport { dom } from '../../utils/dom'\nimport { Keys } from '../../keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: Ref<HTMLElement | null>\n  propsRef: Ref<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  // State\n  options: Ref<Option[]>\n  value: Ref<unknown>\n  disabled: Ref<boolean>\n  firstOption: Ref<Option | undefined>\n  containsCheckedOption: Ref<boolean>\n\n  // State mutators\n  change(nextValue: unknown): boolean\n  registerOption(action: Option): void\n  unregisterOption(id: Option['id']): void\n}\n\nlet RadioGroupContext = Symbol('RadioGroupContext') as InjectionKey<StateDefinition>\n\nfunction useRadioGroupContext(component: string) {\n  let context = inject(RadioGroupContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let RadioGroup = defineComponent({\n  name: 'RadioGroup',\n  emits: ['update:modelValue'],\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  render() {\n    let { modelValue, disabled, ...passThroughProps } = this.$props\n\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      role: 'radiogroup',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroup',\n    })\n  },\n  setup(props, { emit }) {\n    let radioGroupRef = ref<HTMLElement | null>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      options,\n      value,\n      disabled: computed(() => props.disabled),\n      firstOption: computed(() =>\n        options.value.find(option => {\n          if (option.propsRef.disabled) return false\n          return true\n        })\n      ),\n      containsCheckedOption: computed(() =>\n        options.value.some(option => toRaw(option.propsRef.value) === toRaw(props.modelValue))\n      ),\n      change(nextValue: unknown) {\n        if (props.disabled) return false\n        if (value.value === nextValue) return false\n        let nextOption = options.value.find(\n          option => toRaw(option.propsRef.value) === toRaw(nextValue)\n        )?.propsRef\n        if (nextOption?.disabled) return false\n        emit('update:modelValue', nextValue)\n        return true\n      },\n      registerOption(action: UnwrapRef<Option>) {\n        let orderMap = Array.from(\n          radioGroupRef.value?.querySelectorAll('[id^=\"headlessui-radiogroup-option-\"]')!\n        ).reduce(\n          (lookup, element, index) => Object.assign(lookup, { [element.id]: index }),\n          {}\n        ) as Record<string, number>\n\n        options.value.push(action)\n        options.value.sort((a, z) => orderMap[a.id] - orderMap[z.id])\n      },\n      unregisterOption(id: Option['id']) {\n        let idx = options.value.findIndex(radio => radio.id === id)\n        if (idx === -1) return\n        options.value.splice(idx, 1)\n      },\n    }\n\n    // @ts-expect-error ...\n    provide(RadioGroupContext, api)\n\n    useTreeWalker({\n      container: computed(() => dom(radioGroupRef)),\n      accept(node) {\n        if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (!radioGroupRef.value) return\n      if (!radioGroupRef.value.contains(event.target as HTMLElement)) return\n\n      let all = options.value\n        .filter(option => option.propsRef.disabled === false)\n        .map(radio => radio.element) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.value.find(\n              option => option.element === document.activeElement\n            )\n            if (activeOption) api.change(activeOption.propsRef.value)\n          }\n          break\n      }\n    }\n\n    let id = `headlessui-radiogroup-${useId()}`\n\n    return {\n      id,\n      labelledby,\n      describedby,\n      el: radioGroupRef,\n      handleKeyDown,\n    }\n  },\n})\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nexport let RadioGroupOption = defineComponent({\n  name: 'RadioGroupOption',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  render() {\n    let { value, disabled, ...passThroughProps } = this.$props\n\n    let slot = {\n      checked: this.checked,\n      disabled: this.disabled,\n      active: Boolean(this.state & OptionState.Active),\n    }\n\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'radio',\n      'aria-checked': this.checked ? 'true' : 'false',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      'aria-disabled': this.disabled ? true : undefined,\n      tabIndex: this.tabIndex,\n      onClick: this.disabled ? undefined : this.handleClick,\n      onFocus: this.disabled ? undefined : this.handleFocus,\n      onBlur: this.disabled ? undefined : this.handleBlur,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroupOption',\n    })\n  },\n  setup(props) {\n    let api = useRadioGroupContext('RadioGroupOption')\n    let id = `headlessui-radiogroup-option-${useId()}`\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let optionRef = ref<HTMLElement | null>(null)\n    let propsRef = computed(() => ({ value: props.value, disabled: props.disabled }))\n    let state = ref(OptionState.Empty)\n\n    onMounted(() => api.registerOption({ id, element: optionRef, propsRef }))\n    onUnmounted(() => api.unregisterOption(id))\n\n    let isFirstOption = computed(() => api.firstOption.value?.id === id)\n    let disabled = computed(() => api.disabled.value || props.disabled)\n    let checked = computed(() => toRaw(api.value.value) === toRaw(props.value))\n\n    return {\n      id,\n      el: optionRef,\n      labelledby,\n      describedby,\n      state,\n      disabled,\n      checked,\n      tabIndex: computed(() => {\n        if (disabled.value) return -1\n        if (checked.value) return 0\n        if (!api.containsCheckedOption.value && isFirstOption.value) return 0\n        return -1\n      }),\n      handleClick() {\n        if (!api.change(props.value)) return\n\n        state.value |= OptionState.Active\n        optionRef.value?.focus()\n      },\n      handleFocus() {\n        state.value |= OptionState.Active\n      },\n      handleBlur() {\n        state.value &= ~OptionState.Active\n      },\n    }\n  },\n})\n\n// ---\n\nexport let RadioGroupLabel = Label\nexport let RadioGroupDescription = Description\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => done(Reason.Finished), durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","import {\n  defineComponent,\n  inject,\n  provide,\n  ref,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\n\ntype StateDefinition = {\n  // State\n  switchRef: Ref<HTMLButtonElement | null>\n  labelledby: Ref<string | undefined>\n  describedby: Ref<string | undefined>\n}\n\nlet GroupContext = Symbol('GroupContext') as InjectionKey<StateDefinition>\n\n// ---\n\nexport let SwitchGroup = defineComponent({\n  name: 'SwitchGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let switchRef = ref<StateDefinition['switchRef']['value']>(null)\n    let labelledby = useLabels({\n      name: 'SwitchLabel',\n      props: {\n        onClick() {\n          if (!switchRef.value) return\n          switchRef.value.click()\n          switchRef.value.focus({ preventScroll: true })\n        },\n      },\n    })\n    let describedby = useDescriptions({ name: 'SwitchDescription' })\n\n    let api = { switchRef, labelledby, describedby }\n\n    provide(GroupContext, api)\n\n    return () => render({ props, slot: {}, slots, attrs, name: 'SwitchGroup' })\n  },\n})\n\n// ---\n\nexport let Switch = defineComponent({\n  name: 'Switch',\n  emits: ['update:modelValue'],\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    modelValue: { type: Boolean, default: false },\n  },\n  render() {\n    let api = inject(GroupContext, null)\n\n    let slot = { checked: this.$props.modelValue }\n    let propsWeControl = {\n      id: this.id,\n      ref: api === null ? undefined : api.switchRef,\n      role: 'switch',\n      tabIndex: 0,\n      'aria-checked': this.$props.modelValue,\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n      onKeyup: this.handleKeyUp,\n      onKeypress: this.handleKeyPress,\n    }\n\n    if (this.$props.as === 'button') {\n      Object.assign(propsWeControl, { type: 'button' })\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Switch',\n    })\n  },\n  setup(props, { emit }) {\n    let api = inject(GroupContext, null)\n    let id = `headlessui-switch-${useId()}`\n\n    function toggle() {\n      emit('update:modelValue', !props.modelValue)\n    }\n\n    return {\n      id,\n      el: api?.switchRef,\n      labelledby: api?.labelledby,\n      describedby: api?.describedby,\n      handleClick(event: MouseEvent) {\n        event.preventDefault()\n        toggle()\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (event.key !== Keys.Tab) event.preventDefault()\n        if (event.key === Keys.Space) toggle()\n      },\n      // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n      handleKeyPress(event: KeyboardEvent) {\n        event.preventDefault()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let SwitchLabel = Label\nexport let SwitchDescription = Description\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\n\nimport { Features, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { dom } from '../../utils/dom'\nimport {\n  useOpenClosedProvider,\n  State,\n  useOpenClosed,\n  hasOpenClosed,\n} from '../../internal/open-closed'\n\ntype ID = ReturnType<typeof useId>\n\nfunction splitClasses(classes: string = '') {\n  return classes.split(' ').filter(className => className.trim().length > 1)\n}\n\ninterface TransitionContextValues {\n  show: Ref<boolean>\n  appear: Ref<boolean>\n}\nlet TransitionContext = Symbol('TransitionContext') as InjectionKey<TransitionContextValues | null>\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nfunction hasTransitionContext() {\n  return inject(TransitionContext, null) !== null\n}\n\nfunction useTransitionContext() {\n  let context = inject(TransitionContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = inject(NestingContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: Ref<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = Symbol('NestingContext') as InjectionKey<NestingContextValues | null>\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.value.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let transitionableChildren = ref<NestingContextValues['children']['value']>([])\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  function unregister(childId: ID, strategy = RenderStrategy.Hidden) {\n    let idx = transitionableChildren.value.findIndex(({ id }) => id === childId)\n    if (idx === -1) return\n\n    match(strategy, {\n      [RenderStrategy.Unmount]() {\n        transitionableChildren.value.splice(idx, 1)\n      },\n      [RenderStrategy.Hidden]() {\n        transitionableChildren.value[idx].state = TreeStates.Hidden\n      },\n    })\n\n    if (!hasChildren(transitionableChildren) && mounted.value) {\n      done?.()\n    }\n  }\n\n  function register(childId: ID) {\n    let child = transitionableChildren.value.find(({ id }) => id === childId)\n    if (!child) {\n      transitionableChildren.value.push({ id: childId, state: TreeStates.Visible })\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible\n    }\n\n    return () => unregister(childId, RenderStrategy.Unmount)\n  }\n\n  return {\n    children: transitionableChildren,\n    register,\n    unregister,\n  }\n}\n\n// ---\n\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nexport let TransitionChild = defineComponent({\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'],\n  render() {\n    if (this.renderAsRoot) {\n      return h(\n        TransitionRoot,\n        {\n          ...this.$props,\n          onBeforeEnter: () => this.$emit('beforeEnter'),\n          onAfterEnter: () => this.$emit('afterEnter'),\n          onBeforeLeave: () => this.$emit('beforeLeave'),\n          onAfterLeave: () => this.$emit('afterLeave'),\n        },\n        this.$slots\n      )\n    }\n\n    let {\n      appear,\n      show,\n\n      // Class names\n      enter,\n      enterFrom,\n      enterTo,\n      entered,\n      leave,\n      leaveFrom,\n      leaveTo,\n      ...rest\n    } = this.$props\n\n    let propsWeControl = { ref: 'el' }\n    let passthroughProps = rest\n\n    return render({\n      props: { ...passthroughProps, ...propsWeControl },\n      slot: {},\n      slots: this.$slots,\n      attrs: this.$attrs,\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'TransitionChild',\n    })\n  },\n  setup(props, { emit }) {\n    if (!hasTransitionContext() && hasOpenClosed()) {\n      return {\n        renderAsRoot: true,\n      }\n    }\n\n    let container = ref<HTMLElement | null>(null)\n    let state = ref(TreeStates.Visible)\n    let strategy = computed(() => (props.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden))\n\n    let { show, appear } = useTransitionContext()\n    let { register, unregister } = useParentNesting()\n\n    let initial = { value: true }\n\n    let id = useId()\n\n    let isTransitioning = { value: false }\n\n    let nesting = useNesting(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.value) {\n        state.value = TreeStates.Hidden\n        unregister(id)\n        emit('afterLeave')\n      }\n    })\n\n    onMounted(() => {\n      let unregister = register(id)\n      onUnmounted(unregister)\n    })\n\n    watchEffect(() => {\n      // If we are in another mode than the Hidden mode then ignore\n      if (strategy.value !== RenderStrategy.Hidden) return\n      if (!id) return\n\n      // Make sure that we are visible\n      if (show && state.value !== TreeStates.Visible) {\n        state.value = TreeStates.Visible\n        return\n      }\n\n      match(state.value, {\n        [TreeStates.Hidden]: () => unregister(id),\n        [TreeStates.Visible]: () => register(id),\n      })\n    })\n\n    let enterClasses = splitClasses(props.enter)\n    let enterFromClasses = splitClasses(props.enterFrom)\n    let enterToClasses = splitClasses(props.enterTo)\n\n    let enteredClasses = splitClasses(props.entered)\n\n    let leaveClasses = splitClasses(props.leave)\n    let leaveFromClasses = splitClasses(props.leaveFrom)\n    let leaveToClasses = splitClasses(props.leaveTo)\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (state.value === TreeStates.Visible) {\n          let domElement = dom(container)\n          // When you return `null` from a component, the actual DOM reference will\n          // be an empty comment... This means that we can never check for the DOM\n          // node to be `null`. So instead we check for an empty comment.\n          let isEmptyDOMNode = domElement instanceof Comment && domElement.data === ''\n          if (isEmptyDOMNode) {\n            throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n          }\n        }\n      })\n    })\n\n    function executeTransition(onInvalidate: (cb: () => void) => void) {\n      // Skipping initial transition\n      let skip = initial.value && !appear.value\n\n      let node = dom(container)\n      if (!node || !(node instanceof HTMLElement)) return\n      if (skip) return\n\n      isTransitioning.value = true\n\n      if (show.value) emit('beforeEnter')\n      if (!show.value) emit('beforeLeave')\n\n      onInvalidate(\n        show.value\n          ? transition(\n              node,\n              enterClasses,\n              enterFromClasses,\n              enterToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n                if (reason === Reason.Finished) emit('afterEnter')\n              }\n            )\n          : transition(\n              node,\n              leaveClasses,\n              leaveFromClasses,\n              leaveToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n\n                if (reason !== Reason.Finished) return\n\n                // When we don't have children anymore we can safely unregister from the parent and hide\n                // ourselves.\n                if (!hasChildren(nesting)) {\n                  state.value = TreeStates.Hidden\n                  unregister(id)\n                  emit('afterLeave')\n                }\n              }\n            )\n      )\n    }\n\n    onMounted(() => {\n      watch(\n        [show, appear],\n        (_oldValues, _newValues, onInvalidate) => {\n          executeTransition(onInvalidate)\n          initial.value = false\n        },\n        { immediate: true }\n      )\n    })\n\n    provide(NestingContext, nesting)\n    useOpenClosedProvider(\n      computed(() =>\n        match(state.value, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })\n      )\n    )\n\n    return { el: container, renderAsRoot: false, state }\n  },\n})\n\n// ---\n\nexport let TransitionRoot = defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'],\n  render() {\n    let { show, appear, unmount, ...passThroughProps } = this.$props\n    let sharedProps = { unmount }\n\n    return render({\n      props: {\n        ...sharedProps,\n        as: 'template',\n      },\n      slot: {},\n      slots: {\n        ...this.$slots,\n        default: () => [\n          h(\n            TransitionChild,\n            {\n              onBeforeEnter: () => this.$emit('beforeEnter'),\n              onAfterEnter: () => this.$emit('afterEnter'),\n              onBeforeLeave: () => this.$emit('beforeLeave'),\n              onAfterLeave: () => this.$emit('afterLeave'),\n              ...this.$attrs,\n              ...sharedProps,\n              ...passThroughProps,\n            },\n            this.$slots.default\n          ),\n        ],\n      },\n      attrs: {},\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'Transition',\n    })\n  },\n  setup(props) {\n    let usesOpenClosedState = useOpenClosed()\n\n    let show = computed(() => {\n      if (props.show === null && usesOpenClosedState !== null) {\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n\n      return props.show\n    })\n\n    watchEffect(() => {\n      if (![true, false].includes(show.value)) {\n        throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')\n      }\n    })\n\n    let state = ref(show.value ? TreeStates.Visible : TreeStates.Hidden)\n\n    let nestingBag = useNesting(() => {\n      state.value = TreeStates.Hidden\n    })\n\n    let initial = { value: true }\n    let transitionBag = {\n      show,\n      appear: computed(() => props.appear || !initial.value),\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        initial.value = false\n\n        if (show.value) {\n          state.value = TreeStates.Visible\n        } else if (!hasChildren(nestingBag)) {\n          state.value = TreeStates.Hidden\n        }\n      })\n    })\n\n    provide(NestingContext, nestingBag)\n    provide(TransitionContext, transitionBag)\n\n    return { state, show }\n  },\n})\n"],"names":["Features","RenderStrategy","Keys","match","value","lookup","returnValue","args","error","Error","Object","keys","map","key","join","captureStackTrace","render","visible","features","None","main","Static","props","_render","unmount","Unmount","Hidden","hidden","style","display","input","attrs","slots","slot","name","omit","as","passThroughProps","children","length","firstChild","other","type","concat","line","cloneVNode","Array","isArray","h","object","keysToOmit","clone","assign","id","useId","Focus","FocusResult","Direction","FocusableMode","focusableSelector","selector","getFocusableElements","container","document","body","from","querySelectorAll","focusElement","element","focus","preventScroll","focusIn","elements","active","activeElement","direction","First","Next","Previous","Last","startIndex","Math","max","indexOf","focusOptions","NoScroll","offset","total","next","undefined","nextIdx","WrapAround","Underflow","Overflow","hasAttribute","setAttribute","Success","useWindowEvent","listener","options","window","addEventListener","onUnmounted","removeEventListener","contains","containers","useFocusTrap","enabled","ref","restoreElement","previousActiveElement","handleFocus","size","initialFocus","couldFocus","restore","watchEffect","onUpdated","event","Tab","preventDefault","shiftKey","previous","toElement","target","HTMLElement","stopPropagation","interactables","Set","originals","Map","inert","original","get","removeAttribute","StackMessage","StackContext","Symbol","useStackContext","inject","useStackProvider","onUpdate","parentUpdate","provide","ForcePortalRootContext","ForcePortalRoot","defineComponent","String","force","Boolean","setup","Portal","forcePortalRoot","groupContext","PortalGroupContext","myTarget","existingRoot","getElementById","root","createElement","appendChild","getPortalRoot","resolveTarget","notify","onInvalidate","domElement","AddElement","RemoveElement","useElemenStack","parentElement","removeChild","Teleport","to","PortalGroup","api","reactive","DescriptionContext","useDescriptions","descriptionIds","register","push","idx","splice","computed","Description","this","context","$props","propsWeControl","entries","reduce","acc","unref","$attrs","$slots","useDescriptionContext","onMounted","dom","$el","State","DialogStates","Context","useOpenClosed","useOpenClosedProvider","DialogContext","useDialogContext","component","err","DisclosureStates","Missing","Dialog","inheritAttrs","open","emits","role","dialogState","Open","titleId","describedby","onClick","handleClick","onKeydown","handleKeyDown","_","_this","dialogRef","emit","usesOpenClosedState","Closed","internalDialogRef","focusTrapOptions","add","forEach","child","set","getAttribute","has","useInertOthers","message","setTitleId","close","nextTick","overflow","documentElement","paddingRight","scrollbarWidth","innerWidth","clientWidth","observer","IntersectionObserver","entry","boundingClientRect","x","y","width","height","observe","disconnect","el","Escape","DialogOverlay","DialogTitle","DialogDescription","DisclosureContext","useDisclosureContext","ListboxStates","Disclosure","defaultOpen","disclosureState","panelRef","toggleDisclosure","DisclosureButton","disabled","ariaControls","onKeyup","handleKeyUp","_dom","Space","Enter","DisclosurePanel","panelId","FocusTrap","calculateActiveIndex","action","resolvers","items","resolveItems","currentActiveIndex","resolveActiveIndex","activeIndex","nextActiveIndex","findIndex","item","resolveDisabled","slice","reverse","all","Specific","resolveId","Nothing","assertNever","ListboxContext","useListboxContext","MenuStates","Listbox","modelValue","Number","listboxState","labelRef","buttonRef","optionsRef","searchQuery","activeOptionIndex","closeListbox","openListbox","goToOption","nextActiveOptionIndex","option","dataRef","search","toLowerCase","textValue","startsWith","clearSearch","registerOption","unregisterOption","nextOptions","currentActiveOption","a","select","_dom2","defaultPrevented","ListboxLabel","ListboxButton","_dom5","_dom6","ArrowDown","ArrowUp","cb","_dom9","_dom10","requestAnimationFrame","ListboxOptions","_api$options$value$ap","_dom11","_dom12","tabIndex","searchDebounce","clearTimeout","_dom13","Home","PageUp","End","PageDown","_dom14","setTimeout","ListboxOption","selected","toRaw","_dom15","handleMove","handleLeave","_document$getElementB","textContent","_document$getElementB2","trim","watch","immediate","_document$getElementB4","scrollIntoView","block","onFocus","onPointermove","onMousemove","onPointerleave","onMouseleave","useTreeWalker","accept","walk","acceptNode","node","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","MenuContext","useMenuContext","PopoverStates","Menu","menuState","itemsRef","activeItemIndex","closeMenu","openMenu","goToItem","nextActiveItemIndex","registerItem","unregisterItem","nextItems","currentActiveItem","MenuButton","_dom4","_dom7","_dom8","MenuItems","_api$items$value$api$","FILTER_REJECT","FILTER_SKIP","FILTER_ACCEPT","click","MenuItem","_document$getElementB3","PopoverContext","usePopoverContext","Popover","PopoverGroupContext","usePopoverGroupContext","PopoverPanelContext","buttonId","popoverState","button","panel","togglePopover","closePopover","registerBag","registerPopover","isFocusWithinPopoverGroup","mode","_dom3","Loose","Strict","matches","PopoverButton","isWithinPanel","closeOthers","panelContext","activeElementRef","previousActiveElementRef","focusableElements","previousIdx","PopoverOverlay","PopoverPanel","result","_dom16","buttonIdx","filter","_dom17","_dom18","_dom19","PopoverGroup","groupRef","popovers","unregisterPopover","_dom21","some","bag","popover","LabelContext","useLabelContext","useLabels","labelIds","Label","passive","allProps","RadioGroupContext","useRadioGroupContext","OptionState","RadioGroup","labelledby","radioGroupRef","firstOption","find","propsRef","containsCheckedOption","change","nextValue","nextOption","_options$value$find","orderMap","_radioGroupRef$value","index","sort","z","radio","ArrowLeft","activeOption","ArrowRight","Reason","RadioGroupOption","checked","state","Active","onBlur","handleBlur","optionRef","Empty","isFirstOption","RadioGroupLabel","RadioGroupDescription","GroupContext","SwitchGroup","switchRef","Switch","onKeypress","handleKeyPress","toggle","SwitchLabel","SwitchDescription","disposables","raf","cancelAnimationFrame","nextFrame","timer","dispose","addClasses","classes","classList","removeClasses","remove","transition","base","entered","done","d","_done","called","getComputedStyle","transitionDuration","transitionDelay","split","v","includes","parseFloat","durationMs","Finished","Cancelled","waitForTransition","reason","splitClasses","className","TreeStates","TransitionContext","NestingContext","hasChildren","Visible","useNesting","transitionableChildren","mounted","unregister","childId","strategy","TransitionChildRenderFeatures","TransitionChild","show","appear","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","renderAsRoot","TransitionRoot","onBeforeEnter","$emit","onAfterEnter","onBeforeLeave","onAfterLeave","useTransitionContext","useParentNesting","initial","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","Comment","data","_oldValues","_newValues","skip","executeTransition","sharedProps","_this2","nestingBag","transitionBag"],"mappings":"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"}